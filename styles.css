body{
    font-size: 13px;
    margin: 0;
}

/* header */
.header{
   
    height: 80px;
    background-color: #010102;
    color: white;
    width: 100%;
    position: fixed;
    top: 0;
    display: flex;
    align-items: center;
    justify-content: center;
}
.header a{
    display: block;
    color: #f2f2f2;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    font-size: 16px;
}
/* */

.content{
    margin-top: 50px;
    padding: 60px 30px;
}

h4{
    font-size: 16px;
    font-weight: bold;
    margin: 0;
}

.input-group{
    background-color: #fff;
    display: block;
    margin: 20px 10px;
    position: relative;
    width: 600px;
}

.input-group label{
    padding: 12px 30px;
    width: 600px;
    display: block;
    text-align: left;
    color: black;
    cursor: pointer;
    position: relative;
    z-index: 2;
    border: 1px solid #E2E2E2;
    overflow: hidden;
    height: 90px;
    border-radius: 15px;
}

.input-group label:after{
    width: 30px;
    height: 30px;
    content: '';
    border: 1px solid #E2E2E2;
    background-color: #fff;
    background-image: url("data:image/svg+xml,%3Csvg width='30' height='30' viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M5.414 11L4 12.414l5.414 5.414L20.828 6.414 19.414 5l-10 10z' fill='%23FFF' fill-rule='nonzero'/%3E%3C/svg%3E "); 
    /* 其中的fill='%23FFF'，%23代表#，之後的數值代表色碼，此為點選前讓勾勾呈現跟背景相同的白色，達到勾勾消失的效果 */
    background-repeat: no-repeat;
    background-position: 2px 3px;
    border-radius: 50%;
    z-index: 2;
    position: absolute;
    left: 28px;
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer;
}

.input-group label:before{
    content: '';
    background-color: #068BF6;
    position: absolute;
    left: 50%; /* left, top 都設50%是讓radio重card的中心開始放大到填滿card */
    top: 50%;
    transform: translate(-50%, -50%) scale3d(1, 1, 1);
    opacity: 0; /* radio點擊之前是正常尺寸，並且透明度是0，z軸位置在-1 */
    z-index: -1;
}

.input-group input {
    /* width: 30px;
    height: 30px;
    order: 1;
    z-index: 2;
    right: 30px;
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer; */

    position: absolute;
    visibility: hidden; /* radio如果要改變樣式，必須先把預設的radio隱藏起來，用background image方式改掉 */
}

.input-group input:checked ~ label{
    color: #fff; /* 讓radio checked後card內的文字會變白色 */
}

.input-group input:checked ~ label:before{
    transform: translate(-50%, -50%) scale3d(56, 56, 1); /* 將radio放大到填滿card，達到點選後有填色的效果 */
    opacity: 1;
}

.input-group input:checked ~ label:after{
    background-color: white;
    border-color: #068BF6;
    background-image: url("data:image/svg+xml,%3Csvg width='32' height='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M5.414 11L4 12.414l5.414 5.414L20.828 6.414 19.414 5l-10 10z' fill='%23068BF6' fill-rule='nonzero'/%3E%3C/svg%3E ");
    /* 其中的fill='%23FFF'，%23代表#，之後的數值代表色碼，此為點選後讓勾勾呈現#068BF6藍色的效果 */
}

input[type=radio]:checked + label:before{ /* 這是「將radio放大到填滿card，達到點選後有填色的效果」所需要用到的radio btn */
    background-color: #068BF6; /* 此藍色就會是點card後填滿的顏色 */
    width: 17px;
    height: 17px;
}

.radio-card{ /* 控制card內文字位置 */
    margin-left: 50px;
    margin-top: 25px;
}



/* switch btn(Less format) */

/* .switch-button {
  background: white;
  border: 1px solid #010102;
  border-radius: 10px;
  overflow: hidden;
  width: 189px;
  text-align: center;
  color: #4e4e4e;
  position: relative;
  padding-right: 96px;
  position: relative;
  input[type=checkbox] {
    display: initial;
    & + label:before{
      margin-top: 0;
      border: none;
    }
    &:checked + label:before{
      border: none;
    }
   
  }

  &:before {
    content: "Annually";
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    width: 92px;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 3;
    pointer-events: none;
    
  }
  
  .switch-button-checkbox {
    cursor: pointer;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    z-index: 2;

    &:checked + .switch-button-label:before {
      transform: translateX(96px);
      
      // transition: transform 300ms linear;
    }

    & + .switch-button-label {
      position: relative;
      padding: 8px 20px;
      display: block;
      user-select: none;
      pointer-events: none;
      
      &:before {
        content: "";
        background: #010102;
        
        height: 100%;
        width: 100%;
        position: absolute;
        left: 0;
        top: 0;
        border-radius: 8px;
        transform: translateX(0);
        transition: transform 300ms;
      }

      .switch-button-label-span {
        position: relative;
      }
    }
  }
} */


/*   */


/* simple segmented-control test */
.segmented-control {
    display: table;
    width: 100%;
    margin: 2em 0;
    padding: 0;
}

.segmented-control__item {
    display: table-cell;
    margin: 0;
    padding: 0;
    list-style-type: none;
}

.segmented-control__input {
    position: absolute;
    visibility: hidden;
}

.segmented-control__label {
    display: block;
    margin: 0 -1px -1px 0; /* -1px margin removes double-thickness borders between items */
    padding: 1em .25em;

    border: 1px solid #ddd;

    font: 14px/1.5 sans-serif; 
    text-align: center;  

    cursor: pointer;
}

.segmented-control__label:hover {
    background: #fafafa;
}

.segmented-control__input:checked + .segmented-control__label {
    background: #eee;
    color: #333; 
}
/* simple segmented-control test */


/* 2 simple segmented-control test css */

.flight-types {
    display: flex;
    max-width: 336px;
    width: 100%;
    position: relative;
    user-select: none;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    position: relative;
    z-index: 1;
    margin: 0 auto;
    font-size: 12px;
    border: 1px solid #fff;
    border-radius: 3px;
    color: #fff;
  }

.flight-types input[type=radio]:checked + label:before{ 
    background-color: white;
    width: auto;
    height: auto;
}

  .flight-types > input {
    display: none;
  }
  .flight-types > input:checked + label {
    color: #3395DE;
  }
  .flight-types > input:nth-of-type(1):checked ~ label:last-of-type:before {
    transform: translateX(calc(0% + 0px));
  }
  .flight-types > input:nth-of-type(2):checked ~ label:last-of-type:before {
    transform: translateX(calc(100% + 0px));
  }
  .flight-types > input:nth-of-type(3):checked ~ label:last-of-type:before {
    transform: translateX(calc(200% + 0px));
  }
  .flight-types label {
    flex: 1;
    text-align: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    cursor: pointer;
  }
  .flight-types label:last-of-type:before {
    content: "";
    display: block;
    max-width: calc(33.3333333333% - 0px);
    margin: 0px;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;
    transform: translateX(0);
  }
  .flight-types label {
    padding: 6px 3px;
    transition: color 250ms cubic-bezier(0, 0.95, 0.38, 0.98);
  }
  .flight-types label:before {
    background: #fff;
    transition: all 250ms cubic-bezier(0, 0.95, 0.38, 0.98);
  }
  .flight-types label:not(:last-child) {
    border-right: 1px solid #fff;
  }
  
  /* 2 simple segmented-control test css */
